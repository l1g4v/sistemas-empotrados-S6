Open PicoBlaze Assembler log for program "program.asm"
Generated by opbasm v1.3.10
  Assembled on 2024-02-09T07:50:45
  Target architecture: PicoBlaze-3

  Last occupied address: 08A hex
  Nominal program memory size: 1K (1024)  address(9:0)
  Actual memory size: 1024
  Occupied memory locations: 139
  Memory locations available: 885
  Scratchpad size: 64


Assembly listing
----------------
000                                     ;INCLUDE "../utils/delay.asm"
000                                     ;Tarea 3 lcd
000                                     ;constants

000                                     constant LCD_PORT, 00


000  34064 ╭──────⤙                     jump MAIN
           │
           │
001        │                            ;DELAYS
           │
001        │                            constant c_delay_1us, 0B       ; at 50Mhz
           │
001        │                            ;TIMERS
001        │                            ;all this region uses registers s0 to s4
001  0000B ╭────┬─▶          delay_1us: load s0, c_delay_1us
002  1C001 │    │╭▶           wait_1us: sub s0, 01
003  35402 │    │╰⤙                     jump NZ, wait_1us
004  2A000 │    │                       return
           │    │
005  00128 ╭──┬┬──▶         delay_40us: load s1, 28                    ;40 x 1us = 40us
006  30001 │  ││╰┬⤙          wait_40us: call delay_1us
007  1C101 │  ││ │                      sub s1, 01
008  35406 │  ││ ╰⤙                     jump NZ, wait_40us
009  2A000 │  ││                        return
           │  ││
00A  00219 ╭─┬────▶          delay_1ms: load s2, 19                    ;25 x 40us = 1ms
00B  30005 │ ││╰─┬⤙           wait_1ms: call delay_40us
00C  1C201 │ ││  │                      sub s2, 01
00D  3540B │ ││  ╰⤙                     jump NZ, wait_1ms
00E  2A000 │ ││                         return
           │ ││
00F  0027D ╭──────▶          delay_5ms: load s2, 7D                    ;125 x 40us = 1ms
010  30005 │ │╰──┬⤙           wait_5ms: call delay_40us
011  1C201 │ │   │                      sub s2, 01
012  35410 │ │   ╰⤙                     jump NZ, wait_5ms
013  2A000 │ │                          return
           │ │
014  00314 ╭────┬─▶         delay_20ms: load s3, 14                    ;20 x 1ms = 20ms
015  3000A │ ╰───┬⤙          wait_20ms: call delay_1ms
016  1C301 │    ││                      sub s3, 01
017  35415 │    │╰⤙                     jump NZ, wait_20ms
018  2A000 │    │                       return
           │    │
019  00432 │    │             delay_1s: load s4, 32                    ;50 x 20ms = 1000ms
01A  30014 │    ╰┬⤙            wait_1s: call delay_20ms
01B  1C401 │     │                      sub s4, 01
01C  3541A │     ╰⤙                     jump NZ, wait_1s
01D  2A000 │                            return
           │
01E        │                            ; 7 6 5  4  3  2  1  0
01E        │                            ; X E RS RW D7 D6 D5 D4
           │
01E        │                            ;from here everything will use s5 register up to sF
01E        │                            ;s5 will hold the data to be sent
01E  0E540 │     ╭▶        LCD_E_PULSE: xor s5, 40
01F  2C500 │     │                      output s5, LCD_PORT
020  30001 ╰──────⤙                     call delay_1us
021  0E540 │     │                      xor s5, 40
022  2C500 │     │                      output s5, LCD_PORT
023  2A000 │     │                      return
           │     │
024  0A5DF ╭┬┬┬┬┬─▶            LCD_CMD: and s5, DF
025  2C500 │││││││                      output s5, LCD_PORT
026  3001E ││││││╰⤙                     call LCD_E_PULSE
027  2A000 ││││││                       return
           ││││││
028  00500 ╭──────▶           LCD_INIT: load s5, 00
029  2C500 ││││││                       output s5, LCD_PORT
02A  30014 ╰──────⤙                     call delay_20ms
           ││││││
02B  00503 ││││││                       load s5, 03                    ;Send 3 and wait > 4.1ms
02C  30024 │││││╰─⤙                     call LCD_CMD
02D  3000F ╰──────⤙                     call delay_5ms
           │││││
02E  00503 │││││                        load s5, 03                    ;Send 3 and wait > 100us
02F  30024 ││││╰──⤙                     call LCD_CMD
030  30005 ╰──────⤙                     call delay_40us
031  30005 ╰──────⤙                     call delay_40us
032  30005 ╰──────⤙                     call delay_40us
           ││││
033  00503 ││││                         load s5, 03                    ;Send 3 and wait > 40us
034  30024 │││╰───⤙                     call LCD_CMD
035  30005 ╰──────⤙                     call delay_40us
           │││
036  00502 │││                          load s5, 02                    ;Send 2 and wait > 40us
037  30024 ││╰────⤙                     call LCD_CMD
038  30005 ╰──────⤙                     call delay_40us
           ││
039        ││                           ;FUNCTION SET
           ││
039  00502 ││                           load s5, 02                    ;high nibble 0x28
03A  30024 │╰─────⤙                     call LCD_CMD
03B  30001 ╰──────⤙                     call delay_1us
03C  00508 │                            load s5, 08                    ;lower nibble 0x28
03D  30024 ╰──────⤙                     call LCD_CMD
03E  30005 ╰──────⤙                     call delay_40us
           │
03F  00500 │                            load s5, 00                    ;high nibble 0x0C
040  30024 ╰──────⤙                     call LCD_CMD
041  30001 ╰──────⤙                     call delay_1us
042  00506 │                            load s5, 06                    ;lower nibble 0x06
043  30024 ╰──────⤙                     call LCD_CMD
044  30005 ╰──────⤙                     call delay_40us
           │
045  00500 │                            load s5, 00                    ;high nibble 0x0C
046  30024 ╰──────⤙                     call LCD_CMD
047  30001 ╰──────⤙                     call delay_1us
048  0050C │                            load s5, 0C                    ;lower nibble 0x0C
049  30024 ╰──────⤙                     call LCD_CMD
04A  30005 ╰──────⤙                     call delay_40us
           │
04B  00500 │                 LCD_CLEAR: load s5, 00                    ;high nibble 0x01
04C  30024 ╰──────⤙                     call LCD_CMD
04D  30001 ╰──────⤙                     call delay_1us
04E  00501 │                            load s5, 01                    ;lower nibble 0x01
04F  30024 ╰──────⤙                     call LCD_CMD
050  3000A ╰──────⤙                     call delay_1ms                 ;wait > 1.64ms
051  3000A ╰──────⤙                     call delay_1ms
052  2A000 │                            return
           │
053  01650 │            LCD_WRITE_CHAR: load s6, s5                    ; s6 is X, s7 is Y
054  01750 │                            load s7, s5
055  0A60F │                            and s6, 0x0F
056  0A7F0 │                            and s7, 0xF0
057  0E620 │                            xor s6, 20
058  0E720 │                            xor s7, 20
           │
059  2060E │                            sr0 s6                         ; s6>>4
05A  2060E │                            sr0 s6
05B  2060E │                            sr0 s6
05C  2060E │                            sr0 s6
           │
05D  01650 │                            load s6, s5
05E  30024 ╰──────⤙                     call LCD_CMD
05F  30001 ╰──────⤙                     call delay_1us
           │
060  01750 │                            load s7, s5
061  30024 ╰──────⤙                     call LCD_CMD
062  30005 ╰──────⤙                     call delay_40us
063  2A000 │                            return
           │
064  00580 ╰──────▶               MAIN: load s5, 80
065  2C500 │                            output s5, LCD_PORT
066  30028 ╰──────⤙                     call LCD_INIT
           │
           │
067  00508 │                            load s5, 08                    ;high nibble 0x28
068  30024 ╰──────⤙                     call LCD_CMD
069  30001 ╰──────⤙                     call delay_1us
06A  0050A │                            load s5, 0A                    ;lower nibble 0x28
06B  30024 ╰──────⤙                     call LCD_CMD
06C  30005 ╰──────⤙                     call delay_40us
           │
06D  00505 │                            load s5, 05                    ;high nibble 0x0C
06E  30024 ╰──────⤙                     call LCD_CMD
06F  30001 ╰──────⤙                     call delay_1us
070  0050E │                            load s5, 0E                    ;lower nibble 0x06
071  30024 ╰──────⤙                     call LCD_CMD
072  30005 ╰──────⤙                     call delay_40us
           │
073  00503 │                            load s5, 03                    ;high nibble 0x0C
074  30024 ╰──────⤙                     call LCD_CMD
075  30001 ╰──────⤙                     call delay_1us
076  00502 │                            load s5, 02                    ;lower nibble 0x0C
077  30024 ╰──────⤙                     call LCD_CMD
078  30005 ╰──────⤙                     call delay_40us
           │
079  00508 │                            load s5, 08                    ;high nibble 0x0C
07A  30024 ╰──────⤙                     call LCD_CMD
07B  30001 ╰──────⤙                     call delay_1us
07C  00501 │                            load s5, 01                    ;lower nibble 0x0C
07D  30024 ╰──────⤙                     call LCD_CMD
07E  30005 ╰──────⤙                     call delay_40us
           │
07F  00508 │                            load s5, 08                    ;high nibble 0x0C
080  30024 ╰──────⤙                     call LCD_CMD
081  30001 ╰──────⤙                     call delay_1us
082  00508 │                            load s5, 08                    ;lower nibble 0x0C
083  30024 ╰──────⤙                     call LCD_CMD
084  30005 ╰──────⤙                     call delay_40us
           │
085  0050C │                            load s5, 0C                    ;high nibble 0x0C
086  30024 ╰──────⤙                     call LCD_CMD
087  30001 ╰──────⤙                     call delay_1us
088  00508 │                            load s5, 08                    ;lower nibble 0x0C
089  30024 ╰──────⤙                     call LCD_CMD
08A  30005 ╰──────⤙                     call delay_40us




All unused memory locations contain zero (equivalent to "LOAD s0, 00")


PSM files that have been assembled
----------------------------------
    C:\Users\JPablo17\Documents\GitHub\sistemas-empotrados-S6\codigo-ensamblador\Tarea3\program.asm


List of defined constants
-------------------------
    CONSTANT name      Value  Source PSM file
 ----------------      -----  ---------------
    BEL                07
    BS                 08
    CR                 0D
    DCS                90
    DEL                7F
    ESC                1B
    HT                 09
    LCD_PORT           00     program.asm
    LF                 0A
    NUL                00
    ST                 9C
    VT                 0B
    c_delay_1us        0B     program.asm
    datestamp_day      09
    datestamp_month    02
    datestamp_year     18
    timestamp_hours    07
    timestamp_minutes  32
    timestamp_seconds  2D


  No tables defined


List of text strings
--------------------
    STRING name      Value          Source PSM file
 --------------      -----          ---------------
    Opbasm_version$  "1.3.10"
    datestamp$       "09 Feb 2024"
    timestamp$       "07:50:45"


List of line labels
-------------------
    Label           Addr  Source PSM file
 --------           ----  ---------------
 *  LCD_CLEAR       04B   program.asm
    LCD_CMD         024   program.asm
    LCD_E_PULSE     01E   program.asm
    LCD_INIT        028   program.asm
 *  LCD_WRITE_CHAR  053   program.asm
    MAIN            064   program.asm
    delay_1ms       00A   program.asm
 *  delay_1s        019   program.asm
    delay_1us       001   program.asm
    delay_20ms      014   program.asm
    delay_40us      005   program.asm
    delay_5ms       00F   program.asm
    wait_1ms        00B   program.asm
    wait_1s         01A   program.asm
    wait_1us        002   program.asm
    wait_20ms       015   program.asm
    wait_40us       006   program.asm
    wait_5ms        010   program.asm

       * Unreferenced label(s)


List of pragma blocks
---------------------
   Name  Addr range  Value
   ----  ----------  -----


Instruction usage statistics
----------------------------
   Instruction  Instances
   -----------  ---------
   ADD          -
   ADDCY        -
   AND          3
   CALL         64
   COMPARE      -
   DISABLE      -
   ENABLE       -
   FETCH        -
   INPUT        -
   JUMP         7
   LOAD         36
   OR           -
   OUTPUT       5
   RETURN       10
   RETURNI      -
   RL           -
   RR           -
   SL0          -
   SL1          -
   SLA          -
   SLX          -
   SR0          4
   SR1          -
   SRA          -
   SRX          -
   STORE        -
   SUB          6
   SUBCY        -
   TEST         -
   XOR          4
