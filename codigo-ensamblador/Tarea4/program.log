Open PicoBlaze Assembler log for program "program.asm"
Generated by opbasm v1.3.10
  Assembled on 2024-02-24T19:44:54
  Target architecture: PicoBlaze-3

  Last occupied address: 038 hex
  Nominal program memory size: 1K (1024)  address(9:0)
  Actual memory size: 1024
  Occupied memory locations: 57
  Memory locations available: 967
  Scratchpad size: 64


Assembly listing
----------------
000  3401E  ╭─────⤙                     jump MAIN
001         │                           ;DELAYS
            │
001         │                           constant c_delay_1us, 0B       ; at 50Mhz
            │
001         │                           ;TIMERS
001         │                           ;all this region uses registers s0 to s4
001  0000B  │   ╭─▶          delay_1us: load s0, c_delay_1us
002  1C001  │   │╭▶           wait_1us: sub s0, 01
003  35402  │   │╰⤙                     jump NZ, wait_1us
004  2A000  │   │                       return
            │   │
005  00128  │ ╭┬──▶         delay_40us: load s1, 28                    ;40 x 1us = 40us
006  30001  │ ││╰┬⤙          wait_40us: call delay_1us
007  1C101  │ ││ │                      sub s1, 01
008  35406  │ ││ ╰⤙                     jump NZ, wait_40us
009  2A000  │ ││                        return
            │ ││
00A  00219  │╭────▶          delay_1ms: load s2, 19                    ;25 x 40us = 1ms
00B  30005  │││╰─┬⤙           wait_1ms: call delay_40us
00C  1C201  │││  │                      sub s2, 01
00D  3540B  │││  ╰⤙                     jump NZ, wait_1ms
00E  2A000  │││                         return
            │││
00F  0027D  │││              delay_5ms: load s2, 7D                    ;125 x 40us = 1ms
010  30005  ││╰──┬⤙           wait_5ms: call delay_40us
011  1C201  ││   │                      sub s2, 01
012  35410  ││   ╰⤙                     jump NZ, wait_5ms
013  2A000  ││                          return
            ││
014  00314  ││  ╭─▶         delay_20ms: load s3, 14                    ;20 x 1ms = 20ms
015  3000A  │╰───┬⤙          wait_20ms: call delay_1ms
016  1C301  │   ││                      sub s3, 01
017  35415  │   │╰⤙                     jump NZ, wait_20ms
018  2A000  │   │                       return
            │   │
019  00432  │   │             delay_1s: load s4, 32                    ;50 x 20ms = 1000ms
01A  30014  │   ╰┬⤙            wait_1s: call delay_20ms
01B  1C401  │    │                      sub s4, 01
01C  3541A  │    ╰⤙                     jump NZ, wait_1s
01D  2A000  │                           return
            │
            │
01E  005F0  ╰─────▶               MAIN: load s5, F0
01F  2C500                              output s5, 00
020  00551                              load s5, 51
021  2C500                              output s5, 00
022  005C2                              load s5, C2
023  2C500                              output s5, 00
024  00500                              load s5, 00
025  2C500                              output s5, 00
026                                     ;32 clock cycles
026  01000                              load s0, s0
027  01000                              load s0, s0
028  01000                              load s0, s0
029  01000                              load s0, s0
02A  01000                              load s0, s0
02B  01000                              load s0, s0
02C  01000                              load s0, s0
02D  01000                              load s0, s0
02E  01000                              load s0, s0
02F  01000                              load s0, s0
030  01000                              load s0, s0
031  01000                              load s0, s0
032  01000                              load s0, s0
033  01000                              load s0, s0
034  01000                              load s0, s0
035  00000                              load s0, 00
036                                     ;OUTPUT s0, 00
036  2C000                              output s0, 00                  ;disable SPI

037                                lop:
037  01000       ╭▶                     load s0, s0
                 │
038  34037       ╰⤙                     jump lop


All unused memory locations contain zero (equivalent to "LOAD s0, 00")


PSM files that have been assembled
----------------------------------
    /home/leon/Documents/Code/sistemas-empotrados-S6/codigo-ensamblador/Tarea4/program.asm
    /home/leon/Documents/Code/sistemas-empotrados-S6/codigo-ensamblador/utils/delay.asm


List of defined constants
-------------------------
    CONSTANT name      Value  Source PSM file   
 ----------------      -----  ---------------   
    BEL                07
    BS                 08
    CR                 0D
    DCS                90
    DEL                7F
    ESC                1B
    HT                 09
    LF                 0A
    NUL                00
    ST                 9C
    VT                 0B
    c_delay_1us        0B     ../utils/delay.asm
    datestamp_day      18
    datestamp_month    02
    datestamp_year     18
    timestamp_hours    13
    timestamp_minutes  2C
    timestamp_seconds  36


  No tables defined


List of text strings
--------------------
    STRING name      Value          Source PSM file
 --------------      -----          ---------------
    Opbasm_version$  "1.3.10"
    datestamp$       "24 Feb 2024"
    timestamp$       "19:44:54"


List of line labels
-------------------
    Label       Addr  Source PSM file   
 --------       ----  ---------------   
    MAIN        01E   program.asm
    delay_1ms   00A   ../utils/delay.asm
 *  delay_1s    019   ../utils/delay.asm
    delay_1us   001   ../utils/delay.asm
    delay_20ms  014   ../utils/delay.asm
    delay_40us  005   ../utils/delay.asm
 *  delay_5ms   00F   ../utils/delay.asm
    lop         037   program.asm
    wait_1ms    00B   ../utils/delay.asm
    wait_1s     01A   ../utils/delay.asm
    wait_1us    002   ../utils/delay.asm
    wait_20ms   015   ../utils/delay.asm
    wait_40us   006   ../utils/delay.asm
    wait_5ms    010   ../utils/delay.asm

       * Unreferenced label(s)


List of pragma blocks
---------------------
   Name  Addr range  Value
   ----  ----------  -----


Instruction usage statistics
----------------------------
   Instruction  Instances
   -----------  ---------
   ADD          -
   ADDCY        -
   AND          -
   CALL         5
   COMPARE      -
   DISABLE      -
   ENABLE       -
   FETCH        -
   INPUT        -
   JUMP         8
   LOAD         27
   OR           -
   OUTPUT       5
   RETURN       6
   RETURNI      -
   RL           -
   RR           -
   SL0          -
   SL1          -
   SLA          -
   SLX          -
   SR0          -
   SR1          -
   SRA          -
   SRX          -
   STORE        -
   SUB          6
   SUBCY        -
   TEST         -
   XOR          -
