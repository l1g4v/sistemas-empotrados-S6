Open PicoBlaze Assembler log for program "program.asm"
Generated by opbasm v1.3.10
  Assembled on 2024-03-20T23:46:36
  Target architecture: PicoBlaze-3

  Last occupied address: 112 hex
  Nominal program memory size: 1K (1024)  address(9:0)
  Actual memory size: 1024
  Occupied memory locations: 275
  Memory locations available: 749
  Scratchpad size: 64


Assembly listing
----------------
000                                     constant spi_oport, 00

000                                     ;use s8 to sF


000  3408C ╭──────⤙                     jump MAIN
001        │                            ;DELAYS
           │
001        │                            constant c_delay_1us, 0B       ; at 50Mhz
           │
001        │                            ;TIMERS
001        │                            ;all this region uses registers s0 to s4
001  0000B ╭┬┬┬┬┬─▶          delay_1us: load s0, c_delay_1us
002  1C001 ││││││╭▶           wait_1us: sub s0, 01
003  35402 ││││││╰⤙                     jump NZ, wait_1us
004  2A000 ││││││                       return
           ││││││
005  00107 ││││││            delay_7us: load s1, 07                    ;7 x 1us = 7us
006  30001 │││││╰┬⤙           wait_7us: call delay_1us
007  1C101 │││││ │                      sub s1, 01
008  35406 │││││ ╰⤙                     jump NZ, wait_7us
009  2A000 │││││                        return
           │││││
00A  00108 │││││             delay_8us: load s1, 08                    ;8 x 1us = 8us
00B  30001 ││││╰─┬⤙           wait_8us: call delay_1us
00C  1C101 ││││  │                      sub s1, 01
00D  3540B ││││  ╰⤙                     jump NZ, wait_8us
00E  2A000 ││││                         return
           ││││
00F  00119 ││││             delay_25us: load s1, 19                    ;25 x 1us = 25us
010  30001 │││╰───⤙          wait_25us: call delay_1us
011  1C101 │││                          sub s1, 01
012  3541A │││ ╭──⤙                     jump NZ, wait_40us
013  2A000 │││ │                        return
014  00125 ╭──────▶         delay_37us: load s1, 25                    ;37 x 1us = 37us
015  30001 ││╰───┬⤙          wait_37us: call delay_1us
016  1C101 ││  │ │                      sub s1, 01
017  35415 ││  │ ╰⤙                     jump NZ, wait_37us
018  2A000 ││  │                        return
           ││  │
019  00128 ╭──┬─┬─▶         delay_40us: load s1, 28                    ;40 x 1us = 40us
01A  30001 │╰──┴─┬⤙          wait_40us: call delay_1us
01B  1C101 │  │ ││                      sub s1, 01
01C  3541A │  │ │╰⤙                     jump NZ, wait_40us
01D  2A000 │  │ │                       return
           │  │ │
01E  00219 ╭───┬──▶          delay_1ms: load s2, 19                    ;25 x 40us = 1ms
01F  30019 │  ││╰┬⤙           wait_1ms: call delay_40us
020  1C201 │  ││ │                      sub s2, 01
021  3541F │  ││ ╰⤙                     jump NZ, wait_1ms
022  2A000 │  ││                        return
           │  ││
023  0027D ╭──────▶          delay_5ms: load s2, 7D                    ;125 x 40us = 1ms
024  30019 │  ╰──┬⤙           wait_5ms: call delay_40us
025  1C201 │   │ │                      sub s2, 01
026  35424 │   │ ╰⤙                     jump NZ, wait_5ms
027  2A000 │   │                        return
           │   │
028  00314 ╭────┬─▶         delay_20ms: load s3, 14                    ;20 x 1ms = 20ms
029  3001E │   ╰─┬⤙          wait_20ms: call delay_1ms
02A  1C301 │    ││                      sub s3, 01
02B  35429 │    │╰⤙                     jump NZ, wait_20ms
02C  2A000 │    │                       return
           │    │
02D  00432 ╭──────▶           delay_1s: load s4, 32                    ;50 x 20ms = 1000ms
02E  30028 │    ╰┬⤙            wait_1s: call delay_20ms
02F  1C401 │     │                      sub s4, 01
030  3542E │     ╰⤙                     jump NZ, wait_1s
031  2A000 │                            return
           │
032        │                            ;Tarea 3 lcd
032        │                            ;constants
           │
032        │                            constant LCD_PORT, 01
           │
           │
           │
032        │                            ; 7 6 5  4  3  2  1  0
032        │                            ; X E RS RW D7 D6 D5 D4
           │
032        │                            ;from here everything will use s5 register up to s7
032        │                            ;s5 will hold the data to be sent
           │
032  30001 ╭─────┬▶        LCD_E_PULSE: call delay_1us
033  0E540 │     │                      xor s5, 40
034  2C501 │     │                      output s5, LCD_PORT
035  30001 ╰──────⤙                     call delay_1us
036  0E540 │     │                      xor s5, 40
037  2C501 │     │                      output s5, LCD_PORT
038  2A000 │     │                      return
           │     │
039  0A5DF ╭┬┬┬┬┬─▶            LCD_CMD: and s5, DF
03A  2C501 │││││││                      output s5, LCD_PORT
03B  30032 ││││││╰⤙                     call LCD_E_PULSE
03C  2A000 ││││││                       return
           ││││││
03D  00500 ╭──────▶           LCD_INIT: load s5, 00
03E  2C501 ││││││                       output s5, LCD_PORT
03F  30028 ╰──────⤙                     call delay_20ms
           ││││││
040  00503 ││││││                       load s5, 03                    ;Send 3 and wait > 4.1ms
041  30039 │││││╰─⤙                     call LCD_CMD
042  30023 ╰──────⤙                     call delay_5ms
           │││││
043  00503 │││││                        load s5, 03                    ;Send 3 and wait > 100us
044  30039 ││││╰──⤙                     call LCD_CMD
045  30019 ╰──────⤙                     call delay_40us
046  30019 ╰──────⤙                     call delay_40us
047  30019 ╰──────⤙                     call delay_40us
           ││││
048  00503 ││││                         load s5, 03                    ;Send 3 and wait > 40us
049  30039 │││╰───⤙                     call LCD_CMD
04A  30019 ╰──────⤙                     call delay_40us
           │││
04B  00502 │││                          load s5, 02                    ;Send 2 and wait > 40us
04C  30039 ││╰────⤙                     call LCD_CMD
04D  30019 ╰──────⤙                     call delay_40us
           ││
04E        ││                           ;FUNCTION SET
           ││
04E  00502 ││                           load s5, 02                    ;high nibble 0x28
04F  30039 │╰─────⤙                     call LCD_CMD
050  30001 ╰──────⤙                     call delay_1us
051  00508 │                            load s5, 08                    ;lower nibble 0x28
052  30039 ╰──────⤙                     call LCD_CMD
053  30019 ╰──────⤙                     call delay_40us
           │
054  00500 │                            load s5, 00                    ;high nibble 0x0C
055  30039 ╰──────⤙                     call LCD_CMD
056  30001 ╰──────⤙                     call delay_1us
057  0050C │                            load s5, 0C                    ;lower nibble 0x06
058  30039 ╰──────⤙                     call LCD_CMD
059  30019 ╰──────⤙                     call delay_40us
           │
05A  00500 │                            load s5, 00                    ;high nibble 0x0C
05B  30039 ╰──────⤙                     call LCD_CMD
05C  30001 ╰──────⤙                     call delay_1us
05D  00506 │                            load s5, 06                    ;lower nibble 0x0C
05E  30039 ╰──────⤙                     call LCD_CMD
05F  30019 ╰──────⤙                     call delay_40us
           │
060  00500 │                 LCD_CLEAR: load s5, 00                    ;high nibble 0x01
061  30039 ╰──────⤙                     call LCD_CMD
062  30001 ╰──────⤙                     call delay_1us
063  00501 │                            load s5, 01                    ;lower nibble 0x01
064  30039 ╰──────⤙                     call LCD_CMD
065  3001E ╰──────⤙                     call delay_1ms                 ;wait > 1.64ms
066  3001E ╰──────⤙                     call delay_1ms
067  2A000 │                            return
           │
068  01650 │            LCD_WRITE_CHAR: load s6, s5                    ; s6 is X, s7 is Y
069  01750 │                            load s7, s5
06A  0A60F │                            and s6, 0x0F
06B  0A7F0 │                            and s7, 0xF0
06C  0E620 │                            xor s6, 20
06D  0E720 │                            xor s7, 20
           │
06E  2060E │                            sr0 s6                         ; s6>>4
06F  2060E │                            sr0 s6
070  2060E │                            sr0 s6
071  2060E │                            sr0 s6
           │
072  01650 │                            load s6, s5
073  30039 ╰──────⤙                     call LCD_CMD
074  30001 ╰──────⤙                     call delay_1us
           │
075  01750 │                            load s7, s5
076  30039 ╰──────⤙                     call LCD_CMD
077  30019 ╰──────⤙                     call delay_40us
078  2A000 │                            return
           │
079  0C520 ╭───┬┬─▶          LCD_CHARA: or s5, 20
07A  2C501 │   ││                       output s5, LCD_PORT
07B  30032 ╰──────⤙                     call LCD_E_PULSE
07C  2A000 │   ││                       return
           │   ││
           │   ││
07D        │   ││                       ;TIME: 12.84us per transmision
07D  00820 ╭──────▶      SPI_dac_tx_rx: load s8, 20                    ;32-bits to transmit and receive
07E  00900 │   ││                       load s9, 00                    ; CS low (bit0)
07F  2C900 │   ││╭▶   next_SPI_dac_bit: output s9, spi_oport           ;output data bit ready to be used on rising edge
080  0E902 │   │││                      xor s9, 02                     ;clock High (bit1)
081  2C900 │   │││                      output s9, spi_oport           ;drive clock high (bit1)
082  0E902 │   │││                      xor s9, 02                     ;prepare clock Low (bit1)
083  04A00 │   │││                      input sa, 00                   ;read input bit
084  0A903 │   │││                      and s9, 03                     ;set mosi to zero (bit2)
085  0D9A0 │   │││                      or s9, sa                      ;output stays the same if the input is zero, set to one otherwise
086  2C900 │   │││                      output s9, spi_oport           ;drive clock low
087  1C801 │   │││                      sub s8, 01                     ;count bits
088  3547F │   ││╰⤙                     jump NZ, next_SPI_dac_bit      ;repeat until finished
089  00901 │   ││                       load s9, 01
08A  2C900 │   ││                       output s9, spi_oport
08B  2A000 │   ││                       return
           │   ││
08C  00901 ╰──────▶               MAIN: load s9, 01                    ; CS high
08D  2C900 │   ││                       output s9, spi_oport
           │   ││
08E  00580 │   ││                       load s5, 80
08F  2C501 │   ││                       output s5, LCD_PORT
090  3002D ╰──────⤙                     call delay_1s
091  3003D ╰──────⤙                     call LCD_INIT
           │   ││
092  00505 │   ││                       load s5, 05                    ;high nibble 0x28
093  30079 │   │╰─⤙                     call LCD_CHARA
094  30001 ╰──────⤙                     call delay_1us
095  00503 │   │                        load s5, 03                    ;lower nibble 0x28
096  30079 │   ╰──⤙                     call LCD_CHARA
097  30019 ╰──────⤙                     call delay_40us
           │
098  00506 │                            load s5, 06                    ;high nibble 0x28
099  30079 ╰──────⤙                     call LCD_CHARA
09A  30001 ╰──────⤙                     call delay_1us
09B  00505 │                            load s5, 05                    ;lower nibble 0x28
09C  30079 ╰──────⤙                     call LCD_CHARA
09D  30019 ╰──────⤙                     call delay_40us
           │
09E  00506 │                            load s5, 06                    ;high nibble 0x28
09F  30079 ╰──────⤙                     call LCD_CHARA
0A0  30001 ╰──────⤙                     call delay_1us
0A1  0050E │                            load s5, 0E                    ;lower nibble 0x28
0A2  30079 ╰──────⤙                     call LCD_CHARA
0A3  30019 ╰──────⤙                     call delay_40us
           │
0A4  00506 │                            load s5, 06                    ;high nibble 0x28
0A5  30079 ╰──────⤙                     call LCD_CHARA
0A6  30001 ╰──────⤙                     call delay_1us
0A7  0050F │                            load s5, 0F                    ;lower nibble 0x28
0A8  30079 ╰──────⤙                     call LCD_CHARA
0A9  30019 ╰──────⤙                     call delay_40us
           │
0AA  00506 │                            load s5, 06                    ;high nibble 0x28
0AB  30079 ╰──────⤙                     call LCD_CHARA
0AC  30001 ╰──────⤙                     call delay_1us
0AD  00509 │                            load s5, 09                    ;lower nibble 0x28
0AE  30079 ╰──────⤙                     call LCD_CHARA
0AF  30019 ╰──────⤙                     call delay_40us
           │
0B0  00506 │                            load s5, 06                    ;high nibble 0x28
0B1  30079 ╰──────⤙                     call LCD_CHARA
0B2  30001 ╰──────⤙                     call delay_1us
0B3  00504 │                            load s5, 04                    ;lower nibble 0x28
0B4  30079 ╰──────⤙                     call LCD_CHARA
0B5  30019 ╰──────⤙                     call delay_40us
           │
0B6  00506 │                            load s5, 06                    ;high nibble 0x28
0B7  30079 ╰──────⤙                     call LCD_CHARA
0B8  30001 ╰──────⤙                     call delay_1us
0B9  00501 │                            load s5, 01                    ;lower nibble 0x28
0BA  30079 ╰──────⤙                     call LCD_CHARA
0BB  30019 ╰──────⤙                     call delay_40us
           │
0BC  00506 │                            load s5, 06                    ;high nibble 0x28
0BD  30079 ╰──────⤙                     call LCD_CHARA
0BE  30001 ╰──────⤙                     call delay_1us
0BF  0050C │                            load s5, 0C                    ;lower nibble 0x28
0C0  30079 ╰──────⤙                     call LCD_CHARA
0C1  30019 ╰──────⤙                     call delay_40us
           │
0C2  00503 │                            load s5, 03                    ;high nibble 0x28
0C3  30079 ╰──────⤙                     call LCD_CHARA
0C4  30001 ╰──────⤙                     call delay_1us
0C5  0050A │                            load s5, 0A                    ;lower nibble 0x28
0C6  30079 ╰──────⤙                     call LCD_CHARA
0C7  30019 ╰──────⤙                     call delay_40us
           │
0C8  00503 │                            load s5, 03                    ;high nibble 0x28
0C9  30079 ╰──────⤙                     call LCD_CHARA
0CA  30001 ╰──────⤙                     call delay_1us
0CB  00501 │                            load s5, 01                    ;lower nibble 0x28
0CC  30079 ╰──────⤙                     call LCD_CHARA
0CD  30019 ╰──────⤙                     call delay_40us
           │
0CE  00504 │                            load s5, 04                    ;high nibble 0x28
0CF  30079 ╰──────⤙                     call LCD_CHARA
0D0  30001 ╰──────⤙                     call delay_1us
0D1  0050B │                            load s5, 0B                    ;lower nibble 0x28
0D2  30079 ╰──────⤙                     call LCD_CHARA
0D3  30019 ╰──────⤙                     call delay_40us
           │
0D4  00504 │                            load s5, 04                    ;high nibble 0x28
0D5  30079 ╰──────⤙                     call LCD_CHARA
0D6  30001 ╰──────⤙                     call delay_1us
0D7  00508 │                            load s5, 08                    ;lower nibble 0x28
0D8  30079 ╰──────⤙                     call LCD_CHARA
0D9  30019 ╰──────⤙                     call delay_40us
           │
0DA  00507 │                            load s5, 07                    ;high nibble 0x28
0DB  30079 ╰──────⤙                     call LCD_CHARA
0DC  30001 ╰──────⤙                     call delay_1us
0DD  0050A │                            load s5, 0A                    ;lower nibble 0x28
0DE  30079 ╰──────⤙                     call LCD_CHARA
0DF  30019 ╰──────⤙                     call delay_40us
           │
0E0  00502 │                            load s5, 02                    ;high nibble 0x28
0E1  30079 ╰──────⤙                     call LCD_CHARA
0E2  30001 ╰──────⤙                     call delay_1us
0E3  00500 │                            load s5, 00                    ;lower nibble 0x28
0E4  30079 ╰──────⤙                     call LCD_CHARA
0E5  30019 ╰──────⤙                     call delay_40us
           │
0E6  00506 │                            load s5, 06                    ;high nibble 0x28
0E7  30079 ╰──────⤙                     call LCD_CHARA
0E8  30001 ╰──────⤙                     call delay_1us
0E9  00503 │                            load s5, 03                    ;lower nibble 0x28
0EA  30079 ╰──────⤙                     call LCD_CHARA
0EB  30019 ╰──────⤙                     call delay_40us
           │
0EC  00506 │                            load s5, 06                    ;high nibble 0x28
0ED  30079 ╰──────⤙                     call LCD_CHARA
0EE  30001 ╰──────⤙                     call delay_1us
0EF  0050F │                            load s5, 0F                    ;lower nibble 0x28
0F0  30079 ╰──────⤙                     call LCD_CHARA
0F1  30019 ╰──────⤙                     call delay_40us
           │
0F2  00506 │                            load s5, 06                    ;high nibble 0x28
0F3  30079 ╰──────⤙                     call LCD_CHARA
0F4  30001 ╰──────⤙                     call delay_1us
0F5  0050E │                            load s5, 0E                    ;lower nibble 0x28
0F6  30079 ╰──────⤙                     call LCD_CHARA
0F7  30019 ╰──────⤙                     call delay_40us
           │
0F8  00502 │                            load s5, 02                    ;high nibble 0x28
0F9  30079 ╰──────⤙                     call LCD_CHARA
0FA  30001 ╰──────⤙                     call delay_1us
0FB  00500 │                            load s5, 00                    ;lower nibble 0x28
0FC  30079 ╰──────⤙                     call LCD_CHARA
0FD  30019 ╰──────⤙                     call delay_40us
           │
0FE  00503 │                            load s5, 03                    ;high nibble 0x28
0FF  30079 ╰──────⤙                     call LCD_CHARA
100  30001 ╰──────⤙                     call delay_1us
101  00501 │                            load s5, 01                    ;lower nibble 0x28
102  30079 ╰──────⤙                     call LCD_CHARA
103  30019 ╰──────⤙                     call delay_40us
           │
104  00502 │                            load s5, 02                    ;high nibble 0x28
105  30079 ╰──────⤙                     call LCD_CHARA
106  30001 ╰──────⤙                     call delay_1us
107  00508 │                            load s5, 08                    ;lower nibble 0x28
108  30079 ╰──────⤙                     call LCD_CHARA
109  30019 ╰──────⤙                     call delay_40us
           │
10A  00505 │                            load s5, 05                    ;high nibble 0x28
10B  30079 ╰──────⤙                     call LCD_CHARA
10C  30001 ╰──────⤙                     call delay_1us
10D  00506 │                            load s5, 06                    ;lower nibble 0x28
10E  30079 ╰──────⤙                     call LCD_CHARA
10F  30019 ╰──────⤙                     call delay_40us
           │
110        │                      wave:
110  30014 ╰─────┬⤙                     call delay_37us
111        │     │                      ;call delay_1us
111  3007D ╰──────⤙                     call SPI_dac_tx_rx
112  34110       ╰⤙                     jump wave


All unused memory locations contain zero (equivalent to "LOAD s0, 00")


PSM files that have been assembled
----------------------------------
    /home/leon/Documents/Code/sistemas-empotrados-S6/codigo-ensamblador/Practica1-sspi/program.asm
    /home/leon/Documents/Code/sistemas-empotrados-S6/codigo-ensamblador/utils/lcd.asm
    /home/leon/Documents/Code/sistemas-empotrados-S6/codigo-ensamblador/utils/delay.asm


List of defined constants
-------------------------
    CONSTANT name      Value  Source PSM file   
 ----------------      -----  ---------------   
    BEL                07
    BS                 08
    CR                 0D
    DCS                90
    DEL                7F
    ESC                1B
    HT                 09
    LCD_PORT           01     ../utils/lcd.asm
    LF                 0A
    NUL                00
    ST                 9C
    VT                 0B
    c_delay_1us        0B     ../utils/delay.asm
    datestamp_day      14
    datestamp_month    03
    datestamp_year     18
    spi_oport          00     program.asm
    timestamp_hours    17
    timestamp_minutes  2E
    timestamp_seconds  24


  No tables defined


List of text strings
--------------------
    STRING name      Value          Source PSM file
 --------------      -----          ---------------
    Opbasm_version$  "1.3.10"
    datestamp$       "20 Mar 2024"
    timestamp$       "23:46:36"


List of line labels
-------------------
    Label             Addr  Source PSM file   
 --------             ----  ---------------   
    LCD_CHARA         079   ../utils/lcd.asm
 *  LCD_CLEAR         060   ../utils/lcd.asm
    LCD_CMD           039   ../utils/lcd.asm
    LCD_E_PULSE       032   ../utils/lcd.asm
    LCD_INIT          03D   ../utils/lcd.asm
 *  LCD_WRITE_CHAR    068   ../utils/lcd.asm
    MAIN              08C   program.asm
    SPI_dac_tx_rx     07D   program.asm
    delay_1ms         01E   ../utils/delay.asm
    delay_1s          02D   ../utils/delay.asm
    delay_1us         001   ../utils/delay.asm
    delay_20ms        028   ../utils/delay.asm
 *  delay_25us        00F   ../utils/delay.asm
    delay_37us        014   ../utils/delay.asm
    delay_40us        019   ../utils/delay.asm
    delay_5ms         023   ../utils/delay.asm
 *  delay_7us         005   ../utils/delay.asm
 *  delay_8us         00A   ../utils/delay.asm
    next_SPI_dac_bit  07F   program.asm
    wait_1ms          01F   ../utils/delay.asm
    wait_1s           02E   ../utils/delay.asm
    wait_1us          002   ../utils/delay.asm
    wait_20ms         029   ../utils/delay.asm
 *  wait_25us         010   ../utils/delay.asm
    wait_37us         015   ../utils/delay.asm
    wait_40us         01A   ../utils/delay.asm
    wait_5ms          024   ../utils/delay.asm
    wait_7us          006   ../utils/delay.asm
    wait_8us          00B   ../utils/delay.asm
    wave              110   program.asm

       * Unreferenced label(s)


List of pragma blocks
---------------------
   Name  Addr range  Value
   ----  ----------  -----


Instruction usage statistics
----------------------------
   Instruction  Instances
   -----------  ---------
   ADD          -
   ADDCY        -
   AND          4
   CALL         133
   COMPARE      -
   DISABLE      -
   ENABLE       -
   FETCH        -
   INPUT        1
   JUMP         13
   LOAD         74
   OR           2
   OUTPUT       11
   RETURN       16
   RETURNI      -
   RL           -
   RR           -
   SL0          -
   SL1          -
   SLA          -
   SLX          -
   SR0          4
   SR1          -
   SRA          -
   SRX          -
   STORE        -
   SUB          11
   SUBCY        -
   TEST         -
   XOR          6
