Open PicoBlaze Assembler log for program "program.asm"
Generated by opbasm v1.3.10
  Assembled on 2024-04-13T00:08:19
  Target architecture: PicoBlaze-6

  Last occupied address: 04E hex
  Nominal program memory size: 1K (1024)  address(9:0)
  Actual memory size: 4096
  Occupied memory locations: 79
  Memory locations available: 4017
  Scratchpad size: 256


Assembly listing
----------------
000  28000                              disable interrupt
001  2204B ╭──────⤙                     jump MAIN
002        │                            ;DELAYS
           │
002        │                            constant c_delay_1us, 17       ; at 100Mhz
           │
002        │                            ;TIMERS
002        │                            ;all this region uses registers s0 to s4
002  01017 ╭┬┬┬┬┬─▶          delay_1us: load s0, c_delay_1us
003  19001 ││││││╭▶           wait_1us: sub s0, 01
004  36003 ││││││╰⤙                     jump NZ, wait_1us
005  25000 ││││││                       return
           ││││││
006  01107 ││││││            delay_7us: load s1, 07                    ;7 x 1us = 7us
007  20002 │││││╰┬⤙           wait_7us: call delay_1us
008  19101 │││││ │                      sub s1, 01
009  36007 │││││ ╰⤙                     jump NZ, wait_7us
00A  25000 │││││                        return
           │││││
00B  01108 │││││             delay_8us: load s1, 08                    ;8 x 1us = 8us
00C  20002 ││││╰─┬⤙           wait_8us: call delay_1us
00D  19101 ││││  │                      sub s1, 01
00E  3600C ││││  ╰⤙                     jump NZ, wait_8us
00F  25000 ││││                         return
           ││││
010  0110A ││││             delay_10us: load s1, 0A                    ;10 x 1us = 10us
011  20002 │││╰──┬⤙          wait_10us: call delay_1us
012  19101 │││   │                      sub s1, 01
013  36011 │││   ╰⤙                     jump NZ, wait_10us
014  25000 │││                          return
           │││
015  01119 │││              delay_25us: load s1, 19                    ;25 x 1us = 25us
016  20002 ││╰────⤙          wait_25us: call delay_1us
017  19101 ││                           sub s1, 01
018  36020 ││  ╭──⤙                     jump NZ, wait_40us
019  25000 ││  │                        return
01A  01125 ││  │            delay_37us: load s1, 25                    ;37 x 1us = 37us
01B  20002 │╰────┬⤙          wait_37us: call delay_1us
01C  19101 │   │ │                      sub s1, 01
01D  3601B │   │ ╰⤙                     jump NZ, wait_37us
01E  25000 │   │                        return
           │   │
01F  01128 │ ╭┬─┬─▶         delay_40us: load s1, 28                    ;40 x 1us = 40us
020  20002 ╰───┴─┬⤙          wait_40us: call delay_1us
021  19101 │ ││ ││                      sub s1, 01
022  36020 │ ││ │╰⤙                     jump NZ, wait_40us
023  25000 │ ││ │                       return
           │ ││ │
024  01103 │ ││ │          delay_120us: load s1, 03                    ;120 x 40us = 120us
025  2001F │ ││ ╰┬⤙         wait_120us: call delay_40us
026  19101 │ ││  │                      sub s1, 01
027  36025 │ ││  ╰⤙                     jump NZ, wait_120us
028  25000 │ ││                         return
           │ ││
029  01219 │╭─────▶          delay_1ms: load s2, 19                    ;25 x 40us = 1ms
02A  2001F │││╰──┬⤙           wait_1ms: call delay_40us
02B  19201 │││   │                      sub s2, 01
02C  3602A │││   ╰⤙                     jump NZ, wait_1ms
02D  25000 │││                          return
           │││
02E  0127D │││ ╭──▶          delay_5ms: load s2, 7D                    ;125 x 40us = 1ms
02F  2001F ││╰───┬⤙           wait_5ms: call delay_40us
030  19201 ││  │ │                      sub s2, 01
031  3602F ││  │ ╰⤙                     jump NZ, wait_5ms
032  25000 ││  │                        return
           ││  │
           ││  │
033  01304 ││╭──┬─▶         delay_20ms: load s3, 04                    ;4 x 5ms = 20ms
034  2002E │││ ╰─┬⤙          wait_20ms: call delay_5ms
035  19301 │││  ││                      sub s3, 01
036  36034 │││  │╰⤙                     jump NZ, wait_20ms
037  25000 │││  │                       return
           │││  │
038  01432 │││  │             delay_1s: load s4, 32                    ;50 x 20ms = 1000ms
039  20033 │││  ╰┬⤙            wait_1s: call delay_20ms
03A  19401 │││   │                      sub s4, 01
03B  36039 │││   ╰⤙                     jump NZ, wait_1s
03C  25000 │││                          return
           │││
           │││
03D  0113C │││ ╭──▶         delay_60us: load s1, 3C                    ;60 x 1us = 60us
03E  20002 ╰─────┬⤙          wait_60us: call delay_1us
03F  19101 │││ │ │                      sub s1, 01
040  3603E │││ │ ╰⤙                     jump NZ, wait_60us
041  25000 │││ │                        return
           │││ │
042        │││ │                   PWM:
042        │││ │                        ;mandar pulso a alto insta
042  2B010 │││╭───▶                     outputk 01, 0
043  20029 │╰─────⤙                     call delay_1ms
044  1D500 │ │││                        compare s5, 00
045  32049 │ │││╭─⤙                     jump Z, .end
046        │ ││││               .cycle: ; 180°/15 = 12°
046        │ ││││                       ; como se van a usar 4 switches para cada servo solo se pueden dar pasos de 12°
046        │ ││││                       ; dado el calculo del pwm de 1ms a 1.9ms el paso es de 5us por grado
046        │ ││││                       ; 12*5us da 60us por cada 12°
046  2003D │ ││╰─┬⤙                     call delay_60us
047  19501 │ ││ ││                      sub s5, 01
048  36046 │ ││ │╰⤙                     jump NZ, .cycle
049        │ ││ │                       ;mandar pulso a bajo insta
049        │ ││ │                 .end:
049  2B000 │ ││ ╰─▶                     outputk 00, 0
04A  25000 │ ││                         return
           │ ││
04B        │ ││                   MAIN:
04B  09500 ╰─────┬▶                     input s5, 00
04C  20033   ╰────⤙                     call delay_20ms                ; bajo por 20ms
04D  20042    ╰───⤙                     call PWM
04E  2204B       ╰⤙                     jump MAIN


All unused memory locations contain zero (equivalent to "LOAD s0, s0")


PSM files that have been assembled
----------------------------------
    /home/leon/Documents/Code/sistemas-empotrados-S6/codigo-ensamblador/Practica2/program.asm
    /home/leon/Documents/Code/sistemas-empotrados-S6/codigo-ensamblador/utils/delay100.asm


List of defined constants
-------------------------
    CONSTANT name      Value  Source PSM file      
 ----------------      -----  ---------------      
    BEL                07
    BS                 08
    CR                 0D
    DCS                90
    DEL                7F
    ESC                1B
    HT                 09
    LF                 0A
    NUL                00
    ST                 9C
    VT                 0B
    c_delay_1us        17     ../utils/delay100.asm
    datestamp_day      0D
    datestamp_month    04
    datestamp_year     18
    timestamp_hours    00
    timestamp_minutes  08
    timestamp_seconds  13


  No tables defined


List of text strings
--------------------
    STRING name      Value          Source PSM file
 --------------      -----          ---------------
    Opbasm_version$  "1.3.10"
    datestamp$       "13 Apr 2024"
    timestamp$       "00:08:19"


List of line labels
-------------------
    Label        Addr  Source PSM file      
 --------        ----  ---------------      
    MAIN         04B   program.asm
    PWM          042   program.asm
    PWM.cycle    046   program.asm
    PWM.end      049   program.asm
 *  delay_10us   010   ../utils/delay100.asm
 *  delay_120us  024   ../utils/delay100.asm
    delay_1ms    029   ../utils/delay100.asm
 *  delay_1s     038   ../utils/delay100.asm
    delay_1us    002   ../utils/delay100.asm
    delay_20ms   033   ../utils/delay100.asm
 *  delay_25us   015   ../utils/delay100.asm
 *  delay_37us   01A   ../utils/delay100.asm
    delay_40us   01F   ../utils/delay100.asm
    delay_5ms    02E   ../utils/delay100.asm
    delay_60us   03D   program.asm
 *  delay_7us    006   ../utils/delay100.asm
 *  delay_8us    00B   ../utils/delay100.asm
    wait_10us    011   ../utils/delay100.asm
    wait_120us   025   ../utils/delay100.asm
    wait_1ms     02A   ../utils/delay100.asm
    wait_1s      039   ../utils/delay100.asm
    wait_1us     003   ../utils/delay100.asm
    wait_20ms    034   ../utils/delay100.asm
 *  wait_25us    016   ../utils/delay100.asm
    wait_37us    01B   ../utils/delay100.asm
    wait_40us    020   ../utils/delay100.asm
    wait_5ms     02F   ../utils/delay100.asm
    wait_60us    03E   program.asm
    wait_7us     007   ../utils/delay100.asm
    wait_8us     00C   ../utils/delay100.asm

       * Unreferenced label(s)


List of pragma blocks
---------------------
   Name  Addr range  Value
   ----  ----------  -----


Instruction usage statistics
----------------------------
   Instruction  Instances
   -----------  ---------
   ADD          -
   ADDCY        -
   AND          -
   CALL         16
   CALL@        -
   COMPARE      1
   COMPARECY    -
   DISABLE      1
   ENABLE       -
   FETCH        -
   HWBUILD      -
   INPUT        1
   JUMP         17
   JUMP@        -
   LOAD         13
   LOAD&RETURN  -
   OR           -
   OUTPUT       -
   OUTPUTK      2
   REGBANK      -
   RETURN       14
   RETURNI      -
   RL           -
   RR           -
   SL0          -
   SL1          -
   SLA          -
   SLX          -
   SR0          -
   SR1          -
   SRA          -
   SRX          -
   STAR         -
   STORE        -
   SUB          14
   SUBCY        -
   TEST         -
   TESTCY       -
   XOR          -
