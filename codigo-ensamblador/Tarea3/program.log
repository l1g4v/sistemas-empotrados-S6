Open PicoBlaze Assembler log for program "program.asm"
Generated by opbasm v1.3.10
  Assembled on 2024-02-08T20:48:39
  Target architecture: PicoBlaze-3

  Last occupied address: 088 hex
  Nominal program memory size: 1K (1024)  address(9:0)
  Actual memory size: 1024
  Occupied memory locations: 137
  Memory locations available: 887
  Scratchpad size: 64


Assembly listing
----------------
000                                     ;DELAYS

000                                     constant c_delay_1us, 0B       ; at 50Mhz

000                                     ;TIMERS
000                                     ;all this region uses registers s0 to s4
000  0000B ╭────┬─▶          delay_1us: load s0, c_delay_1us
001  1C001 │    │╭▶           wait_1us: sub s0, 01
002  35401 │    │╰⤙                     jump NZ, wait_1us
003  2A000 │    │                       return
           │    │
004  00128 ╭──┬┬──▶         delay_40us: load s1, 28                    ;40 x 1us = 40us
005  30000 │  ││╰┬⤙          wait_40us: call delay_1us
006  1C101 │  ││ │                      sub s1, 01
007  35405 │  ││ ╰⤙                     jump NZ, wait_40us
008  2A000 │  ││                        return
           │  ││
009  00219 ╭─┬────▶          delay_1ms: load s2, 19                    ;25 x 40us = 1ms
00A  30004 │ ││╰─┬⤙           wait_1ms: call delay_40us
00B  1C201 │ ││  │                      sub s2, 01
00C  3540A │ ││  ╰⤙                     jump NZ, wait_1ms
00D  2A000 │ ││                         return
           │ ││
00E  0027D ╭──────▶          delay_5ms: load s2, 7D                    ;125 x 40us = 1ms
00F  30004 │ │╰──┬⤙           wait_5ms: call delay_40us
010  1C201 │ │   │                      sub s2, 01
011  3540F │ │   ╰⤙                     jump NZ, wait_5ms
012  2A000 │ │                          return
           │ │
013  00314 ╭────┬─▶         delay_20ms: load s3, 14                    ;20 x 1ms = 20ms
014  30009 │ ╰───┬⤙          wait_20ms: call delay_1ms
015  1C301 │    ││                      sub s3, 01
016  35414 │    │╰⤙                     jump NZ, wait_20ms
017  2A000 │    │                       return
           │    │
018  00432 │    │             delay_1s: load s4, 32                    ;50 x 20ms = 1000ms
019  30013 │    ╰┬⤙            wait_1s: call delay_20ms
01A  1C401 │     │                      sub s4, 01
01B  35419 │     ╰⤙                     jump NZ, wait_1s
01C  2A000 │                            return
           │
01D        │                            ;Tarea 3 lcd
01D        │                            ;constants
           │
01D        │                            constant LCD_PORT, 01
           │
           │
01D  34064 ╭──────⤙                     jump MAIN
           │
01E        │                            ; 7 6 5  4  3  2  1  0
01E        │                            ; X E RS RW D7 D6 D5 D4
           │
01E        │                            ;from here everything will use s5 register up to sF
01E        │                            ;s5 will hold the data to be sent
01E  0E540 │     ╭▶        LCD_E_PULSE: xor s5, 40
01F  2C501 │     │                      output s5, LCD_PORT
020  30000 ╰──────⤙                     call delay_1us
021  0E540 │     │                      xor s5, 40
022  2C501 │     │                      output s5, LCD_PORT
023  2A000 │     │                      return
           │     │
024  0A5DF ╭┬┬┬┬┬─▶            LCD_CMD: and s5, DF
025  2C501 │││││││                      output s5, LCD_PORT
026  3001E ││││││╰⤙                     call LCD_E_PULSE
027  2A000 ││││││                       return
           ││││││
028  00500 ╭──────▶           LCD_INIT: load s5, 00
029  2C501 ││││││                       output s5, LCD_PORT
02A  30013 ╰──────⤙                     call delay_20ms
           ││││││
02B  00503 ││││││                       load s5, 03                    ;Send 3 and wait > 4.1ms
02C  30024 │││││╰─⤙                     call LCD_CMD
02D  3000E ╰──────⤙                     call delay_5ms
           │││││
02E  00503 │││││                        load s5, 03                    ;Send 3 and wait > 100us
02F  30024 ││││╰──⤙                     call LCD_CMD
030  30004 ╰──────⤙                     call delay_40us
031  30004 ╰──────⤙                     call delay_40us
032  30004 ╰──────⤙                     call delay_40us
           ││││
033  00503 ││││                         load s5, 03                    ;Send 3 and wait > 40us
034  30024 │││╰───⤙                     call LCD_CMD
035  30004 ╰──────⤙                     call delay_40us
           │││
036  00502 │││                          load s5, 02                    ;Send 2 and wait > 40us
037  30024 ││╰────⤙                     call LCD_CMD
038  30004 ╰──────⤙                     call delay_40us
           ││
039        ││                           ;FUNCTION SET
           ││
039  00502 ││                           load s5, 02                    ;high nibble 0x28
03A  30024 │╰─────⤙                     call LCD_CMD
03B  30000 ╰──────⤙                     call delay_1us
03C  00508 │                            load s5, 08                    ;lower nibble 0x28
03D  30024 ╰──────⤙                     call LCD_CMD
03E  30004 ╰──────⤙                     call delay_40us
           │
03F  00500 │                            load s5, 00                    ;high nibble 0x0C
040  30024 ╰──────⤙                     call LCD_CMD
041  30000 ╰──────⤙                     call delay_1us
042  00506 │                            load s5, 06                    ;lower nibble 0x06
043  30024 ╰──────⤙                     call LCD_CMD
044  30004 ╰──────⤙                     call delay_40us
           │
045  00500 │                            load s5, 00                    ;high nibble 0x0C
046  30024 ╰──────⤙                     call LCD_CMD
047  30000 ╰──────⤙                     call delay_1us
048  0050C │                            load s5, 0C                    ;lower nibble 0x0C
049  30024 ╰──────⤙                     call LCD_CMD
04A  30004 ╰──────⤙                     call delay_40us
           │
04B  00500 │                 LCD_CLEAR: load s5, 00                    ;high nibble 0x01
04C  30024 ╰──────⤙                     call LCD_CMD
04D  30000 ╰──────⤙                     call delay_1us
04E  00501 │                            load s5, 01                    ;lower nibble 0x01
04F  30024 ╰──────⤙                     call LCD_CMD
050  30009 ╰──────⤙                     call delay_1ms                 ;wait > 1.64ms
051  30009 ╰──────⤙                     call delay_1ms
052  2A000 │                            return
           │
053  01650 │            LCD_WRITE_CHAR: load s6, s5                    ; s6 is X, s7 is Y
054  01750 │                            load s7, s5
055  0A60F │                            and s6, 0x0F
056  0A7F0 │                            and s7, 0xF0
057  0E620 │                            xor s6, 20
058  0E720 │                            xor s7, 20
           │
059  2060E │                            sr0 s6                         ; s6>>4
05A  2060E │                            sr0 s6
05B  2060E │                            sr0 s6
05C  2060E │                            sr0 s6
           │
05D  01650 │                            load s6, s5
05E  30024 ╰──────⤙                     call LCD_CMD
05F  30000 ╰──────⤙                     call delay_1us
           │
060  01750 │                            load s7, s5
061  30024 ╰──────⤙                     call LCD_CMD
062  30004 ╰──────⤙                     call delay_40us
063  2A000 │                            return
           │
064  30028 ╰──────▶               MAIN: call LCD_INIT
           │
           │
065  00508 │                            load s5, 08                    ;high nibble 0x28
066  30024 ╰──────⤙                     call LCD_CMD
067  30000 ╰──────⤙                     call delay_1us
068  0050A │                            load s5, 0A                    ;lower nibble 0x28
069  30024 ╰──────⤙                     call LCD_CMD
06A  30004 ╰──────⤙                     call delay_40us
           │
06B  00505 │                            load s5, 05                    ;high nibble 0x0C
06C  30024 ╰──────⤙                     call LCD_CMD
06D  30000 ╰──────⤙                     call delay_1us
06E  0050E │                            load s5, 0E                    ;lower nibble 0x06
06F  30024 ╰──────⤙                     call LCD_CMD
070  30004 ╰──────⤙                     call delay_40us
           │
071  00503 │                            load s5, 03                    ;high nibble 0x0C
072  30024 ╰──────⤙                     call LCD_CMD
073  30000 ╰──────⤙                     call delay_1us
074  00502 │                            load s5, 02                    ;lower nibble 0x0C
075  30024 ╰──────⤙                     call LCD_CMD
076  30004 ╰──────⤙                     call delay_40us
           │
077  00508 │                            load s5, 08                    ;high nibble 0x0C
078  30024 ╰──────⤙                     call LCD_CMD
079  30000 ╰──────⤙                     call delay_1us
07A  00501 │                            load s5, 01                    ;lower nibble 0x0C
07B  30024 ╰──────⤙                     call LCD_CMD
07C  30004 ╰──────⤙                     call delay_40us
           │
07D  00508 │                            load s5, 08                    ;high nibble 0x0C
07E  30024 ╰──────⤙                     call LCD_CMD
07F  30000 ╰──────⤙                     call delay_1us
080  00508 │                            load s5, 08                    ;lower nibble 0x0C
081  30024 ╰──────⤙                     call LCD_CMD
082  30004 ╰──────⤙                     call delay_40us
           │
083  0050C │                            load s5, 0C                    ;high nibble 0x0C
084  30024 ╰──────⤙                     call LCD_CMD
085  30000 ╰──────⤙                     call delay_1us
086  00508 │                            load s5, 08                    ;lower nibble 0x0C
087  30024 ╰──────⤙                     call LCD_CMD
088  30004 ╰──────⤙                     call delay_40us




All unused memory locations contain zero (equivalent to "LOAD s0, 00")


PSM files that have been assembled
----------------------------------
    C:\Users\JPablo17\Documents\GitHub\sistemas-empotrados-S6\codigo-ensamblador\Tarea3\program.asm
    C:\Users\JPablo17\Documents\GitHub\sistemas-empotrados-S6\codigo-ensamblador\utils\delay.asm


List of defined constants
-------------------------
    CONSTANT name      Value  Source PSM file   
 ----------------      -----  ---------------   
    BEL                07
    BS                 08
    CR                 0D
    DCS                90
    DEL                7F
    ESC                1B
    HT                 09
    LCD_PORT           01     program.asm
    LF                 0A
    NUL                00
    ST                 9C
    VT                 0B
    c_delay_1us        0B     ../utils/delay.asm
    datestamp_day      08
    datestamp_month    02
    datestamp_year     18
    timestamp_hours    14
    timestamp_minutes  30
    timestamp_seconds  27


  No tables defined


List of text strings
--------------------
    STRING name      Value          Source PSM file
 --------------      -----          ---------------
    Opbasm_version$  "1.3.10"
    datestamp$       "08 Feb 2024"
    timestamp$       "20:48:39"


List of line labels
-------------------
    Label           Addr  Source PSM file   
 --------           ----  ---------------   
 *  LCD_CLEAR       04B   program.asm
    LCD_CMD         024   program.asm
    LCD_E_PULSE     01E   program.asm
    LCD_INIT        028   program.asm
 *  LCD_WRITE_CHAR  053   program.asm
    MAIN            064   program.asm
    delay_1ms       009   ../utils/delay.asm
 *  delay_1s        018   ../utils/delay.asm
    delay_1us       000   ../utils/delay.asm
    delay_20ms      013   ../utils/delay.asm
    delay_40us      004   ../utils/delay.asm
    delay_5ms       00E   ../utils/delay.asm
    wait_1ms        00A   ../utils/delay.asm
    wait_1s         019   ../utils/delay.asm
    wait_1us        001   ../utils/delay.asm
    wait_20ms       014   ../utils/delay.asm
    wait_40us       005   ../utils/delay.asm
    wait_5ms        00F   ../utils/delay.asm

       * Unreferenced label(s)


List of pragma blocks
---------------------
   Name  Addr range  Value
   ----  ----------  -----


Instruction usage statistics
----------------------------
   Instruction  Instances
   -----------  ---------
   ADD          -
   ADDCY        -
   AND          3
   CALL         64
   COMPARE      -
   DISABLE      -
   ENABLE       -
   FETCH        -
   INPUT        -
   JUMP         7
   LOAD         35
   OR           -
   OUTPUT       4
   RETURN       10
   RETURNI      -
   RL           -
   RR           -
   SL0          -
   SL1          -
   SLA          -
   SLX          -
   SR0          4
   SR1          -
   SRA          -
   SRX          -
   STORE        -
   SUB          6
   SUBCY        -
   TEST         -
   XOR          4
