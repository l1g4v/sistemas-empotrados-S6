Open PicoBlaze Assembler log for program "program.asm"
Generated by opbasm v1.3.10
  Assembled on 2024-03-15T17:43:08
  Target architecture: PicoBlaze-3

  Last occupied address: 116 hex
  Nominal program memory size: 1K (1024)  address(9:0)
  Actual memory size: 1024
  Occupied memory locations: 280
  Memory locations available: 744
  Scratchpad size: 64


Assembly listing
----------------
000  3C001                              enable interrupt

001                                     constant n_points, C8          ;100 8bit pairs makes 200 data points


001                                     constant spi_port, 00

001                                     constant rom_oport, 02


001                                     constant rom_iport, 00


001                                     namereg s9, point
001                                     namereg sa, high_rom
001                                     namereg sb, low_rom


001  34090 ╭──────⤙                     jump MAIN
           │
002        │                            ;DELAYS
           │
002        │                            constant c_delay_1us, 0B       ; at 50Mhz
           │
002        │                            ;TIMERS
002        │                            ;all this region uses registers s0 to s4
002  0000B ╭─┬┬┬┬─▶          delay_1us: load s0, c_delay_1us
003  1C001 │ ││││╭▶           wait_1us: sub s0, 01
004  35403 │ ││││╰⤙                     jump NZ, wait_1us
005  2A000 │ ││││                       return
           │ ││││
006  00107 ╭──────▶          delay_7us: load s1, 07                    ;7 x 1us = 7us
007  30002 │ │││╰┬⤙           wait_7us: call delay_1us
008  1C101 │ │││ │                      sub s1, 01
009  35407 │ │││ ╰⤙                     jump NZ, wait_7us
00A  2A000 │ │││                        return
           │ │││
00B  00108 │ │││             delay_8us: load s1, 08                    ;8 x 1us = 8us
00C  30002 │ ││╰─┬⤙           wait_8us: call delay_1us
00D  1C101 │ ││  │                      sub s1, 01
00E  3540C │ ││  ╰⤙                     jump NZ, wait_8us
00F  2A000 │ ││                         return
           │ ││
010  00119 │ ││             delay_25us: load s1, 19                    ;25 x 1us = 25us
011  30002 │ │╰───⤙          wait_25us: call delay_1us
012  1C101 │ │                          sub s1, 01
013  35416 │ │  ╭─⤙                     jump NZ, wait_40us
014  2A000 │ │  │                       return
           │ │  │
015  00128 ╭──┬┬──▶         delay_40us: load s1, 28                    ;40 x 1us = 40us
016  30002 │ ╰──┴┬⤙          wait_40us: call delay_1us
017  1C101 │  ││ │                      sub s1, 01
018  35416 │  ││ ╰⤙                     jump NZ, wait_40us
019  2A000 │  ││                        return
           │  ││
01A  00219 ╭─┬────▶          delay_1ms: load s2, 19                    ;25 x 40us = 1ms
01B  30015 │ ││╰─┬⤙           wait_1ms: call delay_40us
01C  1C201 │ ││  │                      sub s2, 01
01D  3541B │ ││  ╰⤙                     jump NZ, wait_1ms
01E  2A000 │ ││                         return
           │ ││
01F  0027D ╭──────▶          delay_5ms: load s2, 7D                    ;125 x 40us = 1ms
020  30015 │ │╰──┬⤙           wait_5ms: call delay_40us
021  1C201 │ │   │                      sub s2, 01
022  35420 │ │   ╰⤙                     jump NZ, wait_5ms
023  2A000 │ │                          return
           │ │
024  00314 ╭────┬─▶         delay_20ms: load s3, 14                    ;20 x 1ms = 20ms
025  3001A │ ╰───┬⤙          wait_20ms: call delay_1ms
026  1C301 │    ││                      sub s3, 01
027  35425 │    │╰⤙                     jump NZ, wait_20ms
028  2A000 │    │                       return
           │    │
029  00432 ╭──────▶           delay_1s: load s4, 32                    ;50 x 20ms = 1000ms
02A  30024 │    ╰┬⤙            wait_1s: call delay_20ms
02B  1C401 │     │                      sub s4, 01
02C  3542A │     ╰⤙                     jump NZ, wait_1s
02D  2A000 │                            return
           │
02E        │                            ;Tarea 3 lcd
02E        │                            ;constants
           │
02E        │                            constant LCD_PORT, 01
           │
           │
           │
02E        │                            ; 7 6 5  4  3  2  1  0
02E        │                            ; X E RS RW D7 D6 D5 D4
           │
02E        │                            ;from here everything will use s5 register up to s7
02E        │                            ;s5 will hold the data to be sent
           │
02E  30002 ╭─────┬▶        LCD_E_PULSE: call delay_1us
02F  0E540 │     │                      xor s5, 40
030  2C501 │     │                      output s5, LCD_PORT
031  30002 ╰──────⤙                     call delay_1us
032  0E540 │     │                      xor s5, 40
033  2C501 │     │                      output s5, LCD_PORT
034  2A000 │     │                      return
           │     │
035  0A5DF ╭┬┬┬┬┬─▶            LCD_CMD: and s5, DF
036  2C501 │││││││                      output s5, LCD_PORT
037  3002E ││││││╰⤙                     call LCD_E_PULSE
038  2A000 ││││││                       return
           ││││││
039  00500 ╭──────▶           LCD_INIT: load s5, 00
03A  2C501 ││││││                       output s5, LCD_PORT
03B  30024 ╰──────⤙                     call delay_20ms
           ││││││
03C  00503 ││││││                       load s5, 03                    ;Send 3 and wait > 4.1ms
03D  30035 │││││╰─⤙                     call LCD_CMD
03E  3001F ╰──────⤙                     call delay_5ms
           │││││
03F  00503 │││││                        load s5, 03                    ;Send 3 and wait > 100us
040  30035 ││││╰──⤙                     call LCD_CMD
041  30015 ╰──────⤙                     call delay_40us
042  30015 ╰──────⤙                     call delay_40us
043  30015 ╰──────⤙                     call delay_40us
           ││││
044  00503 ││││                         load s5, 03                    ;Send 3 and wait > 40us
045  30035 │││╰───⤙                     call LCD_CMD
046  30015 ╰──────⤙                     call delay_40us
           │││
047  00502 │││                          load s5, 02                    ;Send 2 and wait > 40us
048  30035 ││╰────⤙                     call LCD_CMD
049  30015 ╰──────⤙                     call delay_40us
           ││
04A        ││                           ;FUNCTION SET
           ││
04A  00502 ││                           load s5, 02                    ;high nibble 0x28
04B  30035 │╰─────⤙                     call LCD_CMD
04C  30002 ╰──────⤙                     call delay_1us
04D  00508 │                            load s5, 08                    ;lower nibble 0x28
04E  30035 ╰──────⤙                     call LCD_CMD
04F  30015 ╰──────⤙                     call delay_40us
           │
050  00500 │                            load s5, 00                    ;high nibble 0x0C
051  30035 ╰──────⤙                     call LCD_CMD
052  30002 ╰──────⤙                     call delay_1us
053  0050C │                            load s5, 0C                    ;lower nibble 0x06
054  30035 ╰──────⤙                     call LCD_CMD
055  30015 ╰──────⤙                     call delay_40us
           │
056  00500 │                            load s5, 00                    ;high nibble 0x0C
057  30035 ╰──────⤙                     call LCD_CMD
058  30002 ╰──────⤙                     call delay_1us
059  00506 │                            load s5, 06                    ;lower nibble 0x0C
05A  30035 ╰──────⤙                     call LCD_CMD
05B  30015 ╰──────⤙                     call delay_40us
           │
05C  00500 │                 LCD_CLEAR: load s5, 00                    ;high nibble 0x01
05D  30035 ╰──────⤙                     call LCD_CMD
05E  30002 ╰──────⤙                     call delay_1us
05F  00501 │                            load s5, 01                    ;lower nibble 0x01
060  30035 ╰──────⤙                     call LCD_CMD
061  3001A ╰──────⤙                     call delay_1ms                 ;wait > 1.64ms
062  3001A ╰──────⤙                     call delay_1ms
063  2A000 │                            return
           │
064  01650 │            LCD_WRITE_CHAR: load s6, s5                    ; s6 is X, s7 is Y
065  01750 │                            load s7, s5
066  0A60F │                            and s6, 0x0F
067  0A7F0 │                            and s7, 0xF0
068  0E620 │                            xor s6, 20
069  0E720 │                            xor s7, 20
           │
06A  2060E │                            sr0 s6                         ; s6>>4
06B  2060E │                            sr0 s6
06C  2060E │                            sr0 s6
06D  2060E │                            sr0 s6
           │
06E  01650 │                            load s6, s5
06F  30035 ╰──────⤙                     call LCD_CMD
070  30002 ╰──────⤙                     call delay_1us
           │
071  01750 │                            load s7, s5
072  30035 ╰──────⤙                     call LCD_CMD
073  30015 ╰──────⤙                     call delay_40us
074  2A000 │                            return
           │
075  0C520 ╭──────▶          LCD_CHARA: or s5, 20
076  2C501 │                            output s5, LCD_PORT
077  3002E ╰──────⤙                     call LCD_E_PULSE
078  2A000 │                            return
           │
3FF        │                            ;IMPORTANTE: USEN sB-sF
           │
           │
           │
079        │              spi_done_isr:
3FF        │                            address 3FF                    ; Switch to interrupt vector address
3FF  34079 │     ╭⤙                     jump spi_done_isr              ; Assemble instruction at interrupt vector location
079        │     │                      address spi_done_isr           ; Resume assembly at address previously captured in "spi_done_isr"
079        │     │                      ;TODO
079  30006 ╰─────┴⤙                     call delay_7us
07A  30086 │    ╭─⤙                     call next_16bit_rom
07B  3007D │    │╭⤙                     call spi_send
           │    ││
07C  38001 │    ││                      returni enable
           │    ││
07D  018B0 ╭─────┴▶           spi_send: load s8, low_rom
07E  2C800 │    │                       output s8, spi_port
           │    │
07F  018A0 │    │                       load s8, high_rom
080  2C800 │    │                       output s8, spi_port
           │    │
081  00832 │    │                       load s8, 32
082  2C800 │    │                       output s8, spi_port
           │    │
083  00800 │    │                       load s8, 00
084  2C800 │    │                       output s8, spi_port
           │    │
085  2A000 │    │                       return
           │    │
086        │    │       next_16bit_rom:
086        │    │                       ;high byte
086  2C902 ╭────┴─▶                     output point, rom_oport
087  04A00 │                            input high_rom, rom_iport
088  18901 │                            add point, 01
           │
089        │                            ;low byte
089  2C902 │                            output point, rom_oport
08A  04B00 │                            input low_rom, rom_iport
08B  18901 │                            add point, 01
           │
08C  149C8 │                            compare point, n_points
08D  3548F │     ╭⤙                     jump NZ, .end
08E  00900 │     │                      load point, 00
08F        │     │                .end:
08F  2A000 │     ╰▶                     return
           │
           │
090  00900 ╰──────▶               MAIN: load point, 00
           │
091  00580 │                            load s5, 80
092  2C501 │                            output s5, LCD_PORT
093  30029 ╰──────⤙                     call delay_1s
094  30039 ╰──────⤙                     call LCD_INIT
           │
095  00505 │                            load s5, 05                    ;high nibble 0x28
096  30075 ╰──────⤙                     call LCD_CHARA
097  30002 ╰──────⤙                     call delay_1us
098  00503 │                            load s5, 03                    ;lower nibble 0x28
099  30075 ╰──────⤙                     call LCD_CHARA
09A  30015 ╰──────⤙                     call delay_40us
           │
09B  00506 │                            load s5, 06                    ;high nibble 0x28
09C  30075 ╰──────⤙                     call LCD_CHARA
09D  30002 ╰──────⤙                     call delay_1us
09E  00505 │                            load s5, 05                    ;lower nibble 0x28
09F  30075 ╰──────⤙                     call LCD_CHARA
0A0  30015 ╰──────⤙                     call delay_40us
           │
0A1  00506 │                            load s5, 06                    ;high nibble 0x28
0A2  30075 ╰──────⤙                     call LCD_CHARA
0A3  30002 ╰──────⤙                     call delay_1us
0A4  0050E │                            load s5, 0E                    ;lower nibble 0x28
0A5  30075 ╰──────⤙                     call LCD_CHARA
0A6  30015 ╰──────⤙                     call delay_40us
           │
0A7  00506 │                            load s5, 06                    ;high nibble 0x28
0A8  30075 ╰──────⤙                     call LCD_CHARA
0A9  30002 ╰──────⤙                     call delay_1us
0AA  0050F │                            load s5, 0F                    ;lower nibble 0x28
0AB  30075 ╰──────⤙                     call LCD_CHARA
0AC  30015 ╰──────⤙                     call delay_40us
           │
0AD  00506 │                            load s5, 06                    ;high nibble 0x28
0AE  30075 ╰──────⤙                     call LCD_CHARA
0AF  30002 ╰──────⤙                     call delay_1us
0B0  00509 │                            load s5, 09                    ;lower nibble 0x28
0B1  30075 ╰──────⤙                     call LCD_CHARA
0B2  30015 ╰──────⤙                     call delay_40us
           │
0B3  00506 │                            load s5, 06                    ;high nibble 0x28
0B4  30075 ╰──────⤙                     call LCD_CHARA
0B5  30002 ╰──────⤙                     call delay_1us
0B6  00504 │                            load s5, 04                    ;lower nibble 0x28
0B7  30075 ╰──────⤙                     call LCD_CHARA
0B8  30015 ╰──────⤙                     call delay_40us
           │
0B9  00506 │                            load s5, 06                    ;high nibble 0x28
0BA  30075 ╰──────⤙                     call LCD_CHARA
0BB  30002 ╰──────⤙                     call delay_1us
0BC  00501 │                            load s5, 01                    ;lower nibble 0x28
0BD  30075 ╰──────⤙                     call LCD_CHARA
0BE  30015 ╰──────⤙                     call delay_40us
           │
0BF  00506 │                            load s5, 06                    ;high nibble 0x28
0C0  30075 ╰──────⤙                     call LCD_CHARA
0C1  30002 ╰──────⤙                     call delay_1us
0C2  0050C │                            load s5, 0C                    ;lower nibble 0x28
0C3  30075 ╰──────⤙                     call LCD_CHARA
0C4  30015 ╰──────⤙                     call delay_40us
           │
0C5  00503 │                            load s5, 03                    ;high nibble 0x28
0C6  30075 ╰──────⤙                     call LCD_CHARA
0C7  30002 ╰──────⤙                     call delay_1us
0C8  0050A │                            load s5, 0A                    ;lower nibble 0x28
0C9  30075 ╰──────⤙                     call LCD_CHARA
0CA  30015 ╰──────⤙                     call delay_40us
           │
0CB  00503 │                            load s5, 03                    ;high nibble 0x28
0CC  30075 ╰──────⤙                     call LCD_CHARA
0CD  30002 ╰──────⤙                     call delay_1us
0CE  00501 │                            load s5, 01                    ;lower nibble 0x28
0CF  30075 ╰──────⤙                     call LCD_CHARA
0D0  30015 ╰──────⤙                     call delay_40us
           │
0D1  00504 │                            load s5, 04                    ;high nibble 0x28
0D2  30075 ╰──────⤙                     call LCD_CHARA
0D3  30002 ╰──────⤙                     call delay_1us
0D4  0050B │                            load s5, 0B                    ;lower nibble 0x28
0D5  30075 ╰──────⤙                     call LCD_CHARA
0D6  30015 ╰──────⤙                     call delay_40us
           │
0D7  00504 │                            load s5, 04                    ;high nibble 0x28
0D8  30075 ╰──────⤙                     call LCD_CHARA
0D9  30002 ╰──────⤙                     call delay_1us
0DA  00508 │                            load s5, 08                    ;lower nibble 0x28
0DB  30075 ╰──────⤙                     call LCD_CHARA
0DC  30015 ╰──────⤙                     call delay_40us
           │
0DD  00507 │                            load s5, 07                    ;high nibble 0x28
0DE  30075 ╰──────⤙                     call LCD_CHARA
0DF  30002 ╰──────⤙                     call delay_1us
0E0  0050A │                            load s5, 0A                    ;lower nibble 0x28
0E1  30075 ╰──────⤙                     call LCD_CHARA
0E2  30015 ╰──────⤙                     call delay_40us
           │
0E3  00502 │                            load s5, 02                    ;high nibble 0x28
0E4  30075 ╰──────⤙                     call LCD_CHARA
0E5  30002 ╰──────⤙                     call delay_1us
0E6  00500 │                            load s5, 00                    ;lower nibble 0x28
0E7  30075 ╰──────⤙                     call LCD_CHARA
0E8  30015 ╰──────⤙                     call delay_40us
           │
0E9  00506 │                            load s5, 06                    ;high nibble 0x28
0EA  30075 ╰──────⤙                     call LCD_CHARA
0EB  30002 ╰──────⤙                     call delay_1us
0EC  00503 │                            load s5, 03                    ;lower nibble 0x28
0ED  30075 ╰──────⤙                     call LCD_CHARA
0EE  30015 ╰──────⤙                     call delay_40us
           │
0EF  00506 │                            load s5, 06                    ;high nibble 0x28
0F0  30075 ╰──────⤙                     call LCD_CHARA
0F1  30002 ╰──────⤙                     call delay_1us
0F2  0050F │                            load s5, 0F                    ;lower nibble 0x28
0F3  30075 ╰──────⤙                     call LCD_CHARA
0F4  30015 ╰──────⤙                     call delay_40us
           │
0F5  00506 │                            load s5, 06                    ;high nibble 0x28
0F6  30075 ╰──────⤙                     call LCD_CHARA
0F7  30002 ╰──────⤙                     call delay_1us
0F8  0050E │                            load s5, 0E                    ;lower nibble 0x28
0F9  30075 ╰──────⤙                     call LCD_CHARA
0FA  30015 ╰──────⤙                     call delay_40us
           │
0FB  00502 │                            load s5, 02                    ;high nibble 0x28
0FC  30075 ╰──────⤙                     call LCD_CHARA
0FD  30002 ╰──────⤙                     call delay_1us
0FE  00500 │                            load s5, 00                    ;lower nibble 0x28
0FF  30075 ╰──────⤙                     call LCD_CHARA
100  30015 ╰──────⤙                     call delay_40us
           │
101  00503 │                            load s5, 03                    ;high nibble 0x28
102  30075 ╰──────⤙                     call LCD_CHARA
103  30002 ╰──────⤙                     call delay_1us
104  00501 │                            load s5, 01                    ;lower nibble 0x28
105  30075 ╰──────⤙                     call LCD_CHARA
106  30015 ╰──────⤙                     call delay_40us
           │
107  00502 │                            load s5, 02                    ;high nibble 0x28
108  30075 ╰──────⤙                     call LCD_CHARA
109  30002 ╰──────⤙                     call delay_1us
10A  00508 │                            load s5, 08                    ;lower nibble 0x28
10B  30075 ╰──────⤙                     call LCD_CHARA
10C  30015 ╰──────⤙                     call delay_40us
           │
10D  00505 │                            load s5, 05                    ;high nibble 0x28
10E  30075 ╰──────⤙                     call LCD_CHARA
10F  30002 ╰──────⤙                     call delay_1us
110  00506 │                            load s5, 06                    ;lower nibble 0x28
111  30075 ╰──────⤙                     call LCD_CHARA
112  30015 ╰──────⤙                     call delay_40us
           │
113  30086 ╰──────⤙                     call next_16bit_rom
114  3007D ╰──────⤙                     call spi_send

115                              loopp:
115  01FF0       ╭▶                     load sf, sf
116  34115       ╰⤙                     jump loopp


All unused memory locations contain zero (equivalent to "LOAD s0, 00")


PSM files that have been assembled
----------------------------------
    /home/leon/Documents/Code/sistemas-empotrados-S6/codigo-ensamblador/Practica1/program.asm
    /home/leon/Documents/Code/sistemas-empotrados-S6/codigo-ensamblador/utils/lcd.asm
    /home/leon/Documents/Code/sistemas-empotrados-S6/codigo-ensamblador/utils/delay.asm


List of defined constants
-------------------------
    CONSTANT name      Value  Source PSM file   
 ----------------      -----  ---------------   
    BEL                07
    BS                 08
    CR                 0D
    DCS                90
    DEL                7F
    ESC                1B
    HT                 09
    LCD_PORT           01     ../utils/lcd.asm
    LF                 0A
    NUL                00
    ST                 9C
    VT                 0B
    c_delay_1us        0B     ../utils/delay.asm
    datestamp_day      0F
    datestamp_month    03
    datestamp_year     18
    n_points           C8     program.asm
    rom_iport          00     program.asm
    rom_oport          02     program.asm
    spi_port           00     program.asm
    timestamp_hours    11
    timestamp_minutes  2B
    timestamp_seconds  08


  No tables defined


List of text strings
--------------------
    STRING name      Value          Source PSM file
 --------------      -----          ---------------
    Opbasm_version$  "1.3.10"
    datestamp$       "15 Mar 2024"
    timestamp$       "17:43:08"


List of line labels
-------------------
    Label               Addr  Source PSM file   
 --------               ----  ---------------   
    LCD_CHARA           075   ../utils/lcd.asm
 *  LCD_CLEAR           05C   ../utils/lcd.asm
    LCD_CMD             035   ../utils/lcd.asm
    LCD_E_PULSE         02E   ../utils/lcd.asm
    LCD_INIT            039   ../utils/lcd.asm
 *  LCD_WRITE_CHAR      064   ../utils/lcd.asm
    MAIN                090   program.asm
    delay_1ms           01A   ../utils/delay.asm
    delay_1s            029   ../utils/delay.asm
    delay_1us           002   ../utils/delay.asm
    delay_20ms          024   ../utils/delay.asm
 *  delay_25us          010   ../utils/delay.asm
    delay_40us          015   ../utils/delay.asm
    delay_5ms           01F   ../utils/delay.asm
    delay_7us           006   ../utils/delay.asm
 *  delay_8us           00B   ../utils/delay.asm
    loopp               115   program.asm
    next_16bit_rom      086   program.asm
    next_16bit_rom.end  08F   program.asm
    spi_done_isr        079   program.asm
    spi_send            07D   program.asm
    wait_1ms            01B   ../utils/delay.asm
    wait_1s             02A   ../utils/delay.asm
    wait_1us            003   ../utils/delay.asm
    wait_20ms           025   ../utils/delay.asm
 *  wait_25us           011   ../utils/delay.asm
    wait_40us           016   ../utils/delay.asm
    wait_5ms            020   ../utils/delay.asm
    wait_7us            007   ../utils/delay.asm
    wait_8us            00C   ../utils/delay.asm

       * Unreferenced label(s)


List of pragma blocks
---------------------
   Name  Addr range  Value
   ----  ----------  -----


Instruction usage statistics
----------------------------
   Instruction  Instances
   -----------  ---------
   ADD          2
   ADDCY        -
   AND          3
   CALL         135
   COMPARE      1
   DISABLE      -
   ENABLE       1
   FETCH        -
   INPUT        2
   JUMP         13
   LOAD         76
   OR           1
   OUTPUT       12
   RETURN       16
   RETURNI      1
   RL           -
   RR           -
   SL0          -
   SL1          -
   SLA          -
   SLX          -
   SR0          4
   SR1          -
   SRA          -
   SRX          -
   STORE        -
   SUB          9
   SUBCY        -
   TEST         -
   XOR          4
