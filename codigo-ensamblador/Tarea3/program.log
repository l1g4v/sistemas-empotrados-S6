Open PicoBlaze Assembler log for program "program.asm"
Generated by opbasm v1.3.10
  Assembled on 2024-02-12T08:57:53
  Target architecture: PicoBlaze-3

  Last occupied address: 093 hex
  Nominal program memory size: 1K (1024)  address(9:0)
  Actual memory size: 1024
  Occupied memory locations: 148
  Memory locations available: 876
  Scratchpad size: 64


Assembly listing
----------------

000  34069 ╭──────⤙                     jump MAIN
001        │                            ;DELAYS
           │
001        │                            constant c_delay_1us, 0B       ; at 50Mhz
           │
001        │                            ;TIMERS
001        │                            ;all this region uses registers s0 to s4
001  0000B ╭────┬─▶          delay_1us: load s0, c_delay_1us
002  1C001 │    │╭▶           wait_1us: sub s0, 01
003  35402 │    │╰⤙                     jump NZ, wait_1us
004  2A000 │    │                       return
           │    │
005  00128 ╭──┬┬──▶         delay_40us: load s1, 28                    ;40 x 1us = 40us
006  30001 │  ││╰┬⤙          wait_40us: call delay_1us
007  1C101 │  ││ │                      sub s1, 01
008  35406 │  ││ ╰⤙                     jump NZ, wait_40us
009  2A000 │  ││                        return
           │  ││
00A  00219 ╭─┬────▶          delay_1ms: load s2, 19                    ;25 x 40us = 1ms
00B  30005 │ ││╰─┬⤙           wait_1ms: call delay_40us
00C  1C201 │ ││  │                      sub s2, 01
00D  3540B │ ││  ╰⤙                     jump NZ, wait_1ms
00E  2A000 │ ││                         return
           │ ││
00F  0027D ╭──────▶          delay_5ms: load s2, 7D                    ;125 x 40us = 1ms
010  30005 │ │╰──┬⤙           wait_5ms: call delay_40us
011  1C201 │ │   │                      sub s2, 01
012  35410 │ │   ╰⤙                     jump NZ, wait_5ms
013  2A000 │ │                          return
           │ │
014  00314 ╭────┬─▶         delay_20ms: load s3, 14                    ;20 x 1ms = 20ms
015  3000A │ ╰───┬⤙          wait_20ms: call delay_1ms
016  1C301 │    ││                      sub s3, 01
017  35415 │    │╰⤙                     jump NZ, wait_20ms
018  2A000 │    │                       return
           │    │
019  00432 ╭──────▶           delay_1s: load s4, 32                    ;50 x 20ms = 1000ms
01A  30014 │    ╰┬⤙            wait_1s: call delay_20ms
01B  1C401 │     │                      sub s4, 01
01C  3541A │     ╰⤙                     jump NZ, wait_1s
01D  2A000 │                            return
           │
01E        │                            ;Tarea 3 lcd
01E        │                            ;constants
           │
01E        │                            constant LCD_PORT, 00
           │
           │
           │
01E        │                            ; 7 6 5  4  3  2  1  0
01E        │                            ; X E RS RW D7 D6 D5 D4
           │
01E        │                            ;from here everything will use s5 register up to sF
01E        │                            ;s5 will hold the data to be sent
01E  30001 ╭─────┬▶        LCD_E_PULSE: call delay_1us
01F  0E540 │     │                      xor s5, 40
020  2C500 │     │                      output s5, LCD_PORT
021  30001 ╰──────⤙                     call delay_1us
022  0E540 │     │                      xor s5, 40
023  2C500 │     │                      output s5, LCD_PORT
024  2A000 │     │                      return
           │     │
025  0A5DF ╭┬┬┬┬┬─▶            LCD_CMD: and s5, DF
026  2C500 │││││││                      output s5, LCD_PORT
027  3001E ││││││╰⤙                     call LCD_E_PULSE
028  2A000 ││││││                       return
           ││││││
029  00500 ╭──────▶           LCD_INIT: load s5, 00
02A  2C500 ││││││                       output s5, LCD_PORT
02B  30014 ╰──────⤙                     call delay_20ms
           ││││││
02C  00503 ││││││                       load s5, 03                    ;Send 3 and wait > 4.1ms
02D  30025 │││││╰─⤙                     call LCD_CMD
02E  3000F ╰──────⤙                     call delay_5ms
           │││││
02F  00503 │││││                        load s5, 03                    ;Send 3 and wait > 100us
030  30025 ││││╰──⤙                     call LCD_CMD
031  30005 ╰──────⤙                     call delay_40us
032  30005 ╰──────⤙                     call delay_40us
033  30005 ╰──────⤙                     call delay_40us
           ││││
034  00503 ││││                         load s5, 03                    ;Send 3 and wait > 40us
035  30025 │││╰───⤙                     call LCD_CMD
036  30005 ╰──────⤙                     call delay_40us
           │││
037  00502 │││                          load s5, 02                    ;Send 2 and wait > 40us
038  30025 ││╰────⤙                     call LCD_CMD
039  30005 ╰──────⤙                     call delay_40us
           ││
03A        ││                           ;FUNCTION SET
           ││
03A  00502 ││                           load s5, 02                    ;high nibble 0x28
03B  30025 │╰─────⤙                     call LCD_CMD
03C  30001 ╰──────⤙                     call delay_1us
03D  00508 │                            load s5, 08                    ;lower nibble 0x28
03E  30025 ╰──────⤙                     call LCD_CMD
03F  30005 ╰──────⤙                     call delay_40us
           │
040  00500 │                            load s5, 00                    ;high nibble 0x0C
041  30025 ╰──────⤙                     call LCD_CMD
042  30001 ╰──────⤙                     call delay_1us
043  0050C │                            load s5, 0C                    ;lower nibble 0x06
044  30025 ╰──────⤙                     call LCD_CMD
045  30005 ╰──────⤙                     call delay_40us
           │
046  00500 │                            load s5, 00                    ;high nibble 0x0C
047  30025 ╰──────⤙                     call LCD_CMD
048  30001 ╰──────⤙                     call delay_1us
049  00506 │                            load s5, 06                    ;lower nibble 0x0C
04A  30025 ╰──────⤙                     call LCD_CMD
04B  30005 ╰──────⤙                     call delay_40us
           │
04C  00500 │                 LCD_CLEAR: load s5, 00                    ;high nibble 0x01
04D  30025 ╰──────⤙                     call LCD_CMD
04E  30001 ╰──────⤙                     call delay_1us
04F  00501 │                            load s5, 01                    ;lower nibble 0x01
050  30025 ╰──────⤙                     call LCD_CMD
051  3000A ╰──────⤙                     call delay_1ms                 ;wait > 1.64ms
052  3000A ╰──────⤙                     call delay_1ms
053  2A000 │                            return
           │
054  01650 │            LCD_WRITE_CHAR: load s6, s5                    ; s6 is X, s7 is Y
055  01750 │                            load s7, s5
056  0A60F │                            and s6, 0x0F
057  0A7F0 │                            and s7, 0xF0
058  0E620 │                            xor s6, 20
059  0E720 │                            xor s7, 20
           │
05A  2060E │                            sr0 s6                         ; s6>>4
05B  2060E │                            sr0 s6
05C  2060E │                            sr0 s6
05D  2060E │                            sr0 s6
           │
05E  01650 │                            load s6, s5
05F  30025 ╰──────⤙                     call LCD_CMD
060  30001 ╰──────⤙                     call delay_1us
           │
061  01750 │                            load s7, s5
062  30025 ╰──────⤙                     call LCD_CMD
063  30005 ╰──────⤙                     call delay_40us
064  2A000 │                            return
           │
065  0C520 ╭┬┬┬┬┬┬▶          LCD_CHARA: or s5, 20
066  2C500 │││││││                      output s5, LCD_PORT
067  3001E ╰──────⤙                     call LCD_E_PULSE
068  2A000 │││││││                      return
           │││││││
           │││││││
069  00580 ╰──────▶               MAIN: load s5, 80
06A  2C500 │││││││                      output s5, LCD_PORT
06B  30019 ╰──────⤙                     call delay_1s
06C  30029 ╰──────⤙                     call LCD_INIT
           │││││││
           │││││││
06D  00504 │││││││                      load s5, 04                    ;high nibble 0x28
06E  30065 ││││││╰⤙                     call LCD_CHARA
06F  30001 ╰──────⤙                     call delay_1us
070  0050A ││││││                       load s5, 0A                    ;lower nibble 0x28
071  30065 │││││╰─⤙                     call LCD_CHARA
072  30005 ╰──────⤙                     call delay_40us
           │││││
073  00505 │││││                        load s5, 05                    ;high nibble 0x0C
074  30065 ││││╰──⤙                     call LCD_CHARA
075  30001 ╰──────⤙                     call delay_1us
076  0050E ││││                         load s5, 0E                    ;lower nibble 0x06
077  30065 │││╰───⤙                     call LCD_CHARA
078  30005 ╰──────⤙                     call delay_40us
           │││
079  00503 │││                          load s5, 03                    ;high nibble 0x0C
07A  30065 ││╰────⤙                     call LCD_CHARA
07B  30001 ╰──────⤙                     call delay_1us
07C  00502 ││                           load s5, 02                    ;lower nibble 0x0C
07D  30065 │╰─────⤙                     call LCD_CHARA
07E  30005 ╰──────⤙                     call delay_40us
           │
07F  00504 │                            load s5, 04                    ;high nibble 0x0C
080  30065 ╰──────⤙                     call LCD_CHARA
081  30001 ╰──────⤙                     call delay_1us
082  00501 │                            load s5, 01                    ;lower nibble 0x0C
083  30065 ╰──────⤙                     call LCD_CHARA
084  30005 ╰──────⤙                     call delay_40us
           │
085  00504 │                            load s5, 04                    ;high nibble 0x0C
086  30065 ╰──────⤙                     call LCD_CHARA
087  30001 ╰──────⤙                     call delay_1us
088  00504 │                            load s5, 04                    ;lower nibble 0x0C
089  30065 ╰──────⤙                     call LCD_CHARA
08A  30005 ╰──────⤙                     call delay_40us
           │
08B  00504 │                            load s5, 04                    ;high nibble 0x0C
08C  30065 ╰──────⤙                     call LCD_CHARA
08D  30001 ╰──────⤙                     call delay_1us
08E  0050C │                            load s5, 0C                    ;lower nibble 0x0C
08F  30065 ╰──────⤙                     call LCD_CHARA
090  30005 ╰──────⤙                     call delay_40us
           │
091  30001 ╰──────⤙                     call delay_1us
092                              loopp:
092  01000       ╭▶                     load s0, s0
093  34092       ╰⤙                     jump loopp



All unused memory locations contain zero (equivalent to "LOAD s0, 00")


PSM files that have been assembled
----------------------------------
    /home/leon/Documents/Code/sistemas-empotrados-S6/codigo-ensamblador/Tarea3/program.asm
    /home/leon/Documents/Code/sistemas-empotrados-S6/codigo-ensamblador/utils/delay.asm


List of defined constants
-------------------------
    CONSTANT name      Value  Source PSM file   
 ----------------      -----  ---------------   
    BEL                07
    BS                 08
    CR                 0D
    DCS                90
    DEL                7F
    ESC                1B
    HT                 09
    LCD_PORT           00     program.asm
    LF                 0A
    NUL                00
    ST                 9C
    VT                 0B
    c_delay_1us        0B     ../utils/delay.asm
    datestamp_day      0C
    datestamp_month    02
    datestamp_year     18
    timestamp_hours    08
    timestamp_minutes  39
    timestamp_seconds  35


  No tables defined


List of text strings
--------------------
    STRING name      Value          Source PSM file
 --------------      -----          ---------------
    Opbasm_version$  "1.3.10"
    datestamp$       "12 Feb 2024"
    timestamp$       "08:57:53"


List of line labels
-------------------
    Label           Addr  Source PSM file   
 --------           ----  ---------------   
    LCD_CHARA       065   program.asm
 *  LCD_CLEAR       04C   program.asm
    LCD_CMD         025   program.asm
    LCD_E_PULSE     01E   program.asm
    LCD_INIT        029   program.asm
 *  LCD_WRITE_CHAR  054   program.asm
    MAIN            069   program.asm
    delay_1ms       00A   ../utils/delay.asm
    delay_1s        019   ../utils/delay.asm
    delay_1us       001   ../utils/delay.asm
    delay_20ms      014   ../utils/delay.asm
    delay_40us      005   ../utils/delay.asm
    delay_5ms       00F   ../utils/delay.asm
    loopp           092   program.asm
    wait_1ms        00B   ../utils/delay.asm
    wait_1s         01A   ../utils/delay.asm
    wait_1us        002   ../utils/delay.asm
    wait_20ms       015   ../utils/delay.asm
    wait_40us       006   ../utils/delay.asm
    wait_5ms        010   ../utils/delay.asm

       * Unreferenced label(s)


List of pragma blocks
---------------------
   Name  Addr range  Value
   ----  ----------  -----


Instruction usage statistics
----------------------------
   Instruction  Instances
   -----------  ---------
   ADD          -
   ADDCY        -
   AND          3
   CALL         68
   COMPARE      -
   DISABLE      -
   ENABLE       -
   FETCH        -
   INPUT        -
   JUMP         8
   LOAD         37
   OR           1
   OUTPUT       6
   RETURN       11
   RETURNI      -
   RL           -
   RR           -
   SL0          -
   SL1          -
   SLA          -
   SLX          -
   SR0          4
   SR1          -
   SRA          -
   SRX          -
   STORE        -
   SUB          6
   SUBCY        -
   TEST         -
   XOR          4
